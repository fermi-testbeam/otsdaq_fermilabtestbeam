daq: {
	fragment_receiver: {
		generator: UDPReceiver	 #daq generator plug-in type
		fragment_type: UDP	 #generator data fragment type

		mpi_sync_interval: 50
		fragment_ids: []
		fragment_id: 99	 # Please define only one of these
		sleep_on_stop_us: 0
		requests_enabled: false	 # Whether to set up the socket for listening for trigger messages
		request_mode: "Ignored"	 # Possible values are: Ignored, Single, Buffer, Window
		data_buffer_depth_fragments: 1000
		data_buffer_depth_mb: 1000
		request_port: 3001
		request_address: "127.0.0.1"	 # Multicast request address
		request_window_offset: 0	 # Request message contains tzero. Window will be from tzero - offset to tzero + width
		request_window_width: 0
		stale_request_timeout: "0xFFFFFFFF"	 # How long to wait before discarding request messages that are outside the available data
		request_windows_are_unique: true	 # If request windows are unique, avoids a copy operation, but the same data point cannot be used for two requests. If this is not anticipated, leave set to "true"
		separate_data_thread: false	 # MUST be true for triggers to be applied! If triggering is not desired, but a separate readout thread is, set this to true, triggers_enabled to false and trigger_mode to ignored.
		separate_monitoring_thread: false	 # Whether a thread should be started which periodically calls checkHWStatus_, a user-defined function which should be used to check hardware status registers and report to MetricMan.
		poll_hardware_status: false	 # Whether checkHWStatus_ will be called, either through the thread or at the start of getNext
		hardware_poll_interval_us: 1000000	 # If hardware monitoring thread is enabled, how often should it call checkHWStatus_
		fragment_id: 0
		board_id: 0
		starting_fragment_id: 0
		random_seed: 5780
		sleep_on_stop_us: 500000
		nADCcounts: 40
		throttle_usecs: 100000
		distribution_type: 1
		timestamp_scale_factor: 1
		
		destinations: {
			d3: { transferPluginType: MPI destination_rank: 4294967295 max_fragment_size_words: 2097152}
		}

	}

	metrics: {
		brFile: {
			metricPluginType: "file"
			level: 3
			fileName: "/tmp/boardreader/br_%UID%_metrics.log"
			uniquify: true
		}

	}

}

