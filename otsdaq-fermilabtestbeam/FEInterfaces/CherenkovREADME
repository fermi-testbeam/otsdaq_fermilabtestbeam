So, you want to run the FTBF daq using otsdaq?

Navigate to /home/nfs/ftbf_user/Desktop (~/Desktop) and do:
source setup_otsdaq.sh

This script sets the environment variables. Next you need start up otsdaq:
StartOts.sh

The command prompt should flash some info, including where to find a log file
and a url.

Open the url in firefox or chrome on whatever device you wish. You should now
see the otsdaq desktop.

To configure otsdaq, select the configure icon on the desktop and open the tree
view for the active configuration.

Navigate to FECherenkovInterface and expand the tree. You should see only one
member, Cherenkov. Expand this as well.

Here are the configuration options:

ADCList - expects a list of integers from 1 to 24, indicating what slots in the
	CAMAC crate have Lecroy 2249a ADCs. Enter 0 if there are no ADCs.
TDCList - same as above but for Lecroy 2228a TDCs
ScalerList - same as above but for Jorway 85a scalers.
GateList - same as above but for Lecroy 2323a gate generators.
LoopTime - when the front end is running, it calls getData() in a loop. getData
	sets the Wiener cc-usb to daq mode, waits LoopTime seconds, and turns
	off daq mode to read the output FIFO.
DataFilenamePrefix - data files output from otsdaq are located in $USER_DATA
	and take the form DataFilenamePrefix### where ### is the current run
	number.
DataFileHeader - This header appears at teh top of data files, under the date
	and time of the run start and above the list of CAMAC modules in use.

After you have set the configuration options as you wish, scroll to the top of
the tree and save your changes as a new configuration. By default, this
configuration will be activated.

To take data, open the State Machine icon on the otsdaq desktop. Select
initialize. Ensure that the correct configuration is selected and select
configure. At this point the front end code prepares the modules in the CAMAC
crate and the CAMAC controller to take data, including preparing the stack.
Finally select run. The front end code creates a new output file for this 
run number and begins taking data in a loop. You can pause the run and resume
it later or you can stop the run to shutdown the program and start a new one.


If everything works properly, these will be the only important instructions.

Things I hope no one ever has to do:

To change the format of the configuration table, you need to start otsdaq in
wizard mode with 'StartOts.sh -w'. otsdaq also has a verbose option -v for
debugging.

If you're seeing a lot of error code -110, try completely restarting otsdaq.
If that doesn't work, it is likely that the Wiener cc-usb has been left in a
bad state. Sometimes it needs to power cycled to recover.

The front end source code is located in the source directory of otsdaq, which
is currently /data/otsdaq_develop/srcs/ . The front end code can be found in 
srcs/otsdaq_fermilabtestbeam/otsdaq-fermilabtestbeam/ in three seperate places.
These are FEInterfaces, where the FECherenkovInterface that otsdaq looks for is
implemented, CAMAC_XXUSB which holds the code to communicate with the cc-usb
used by the interface, and xxusb_3.3, which contains the library from Wiener to
use with the cc-usb.

To compile the code, you must have run the otsdaq setup script. The command is
'mrb b', and the command to clear previous builds is 'mrb z'. It works best if
you run these as otsdaq_develop while ssh'ed into ftbf-daq-07. Alternatively,
compile it here and be prepared to bug someone with sudo access to update or 
install some libraries.
